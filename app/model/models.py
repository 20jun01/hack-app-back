# generated by fastapi-codegen:
#   filename:  YNotes.openapi.yaml
#   timestamp: 2024-05-14T01:04:48+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class NotesCategoriesCategoryIdGetResponse(BaseModel):
    categories: List[str]


class NotesCategoriesGetResponse(BaseModel):
    categories: List[str]


class NoteRes(BaseModel):
    title: str
    categories: List[str]
    summary: Optional[str] = None
    subCategories: List[str]


class NoteReq(BaseModel):
    title: str
    content: str
    summary: Optional[str] = None
    subCategories: List[str]
    comments: Optional[List[str]] = None


class NotesGetResponse(BaseModel):
    note: NoteRes


class NotesPostRequest(BaseModel):
    file: bytes = Field(
        ...,
        description="解析対象のノートの画像",
        example="cmMtdXBsb2FkLTE3MTU1NjY2OTM4NzEtMg==/DALL·E 2024-04-24 11.13.03 - An abstract and data-inspired representation of a dark cyber space, focusing on digital data elements. Imagine a visual composition resembling data fl.webp",
    )


class NotesPostResponse(BaseModel):
    noteId: str
    tags: List[str]


class NotesTagsPostRequest(BaseModel):
    tags: List[str] = Field(..., description="追加するタグ")


class NotesTagsPostResponse(BaseModel):
    pass


class NotesTagsPatchRequest(BaseModel):
    tags: List[str] = Field(..., description="新たなタグ")


class NotesTagsPatchResponse(BaseModel):
    pass
